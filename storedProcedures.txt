1.
DELIMITER $$


CREATE PROCEDURE selectAdvertise(IN user_contact VARCHAR(255))
BEGIN
    SELECT title
    FROM advertise
    WHERE publisher_id = (
        SELECT user_id
        FROM user
        WHERE email = user_contact OR phone_number = user_contact
    )
    ORDER BY published_at DESC;
END$$

DELIMITER ;

__________________________________________________________________
2.
DELIMITER $$


CREATE PROCEDURE selectNameOfRejected(IN user_contact VARCHAR(255))
BEGIN
    SELECT  u.first_name, u.last_name
    FROM user u
    WHERE u.user_id IN (
        SELECT a.publisher_id
        FROM advertise a
        WHERE a.status = 'rejected'
          AND a.adApprover_id = (
              SELECT user_id
              FROM user
              WHERE email = user_contact OR phone_number = user_contact
          )
    );
END$$


_____________________________________________________________________
3.DELIMITER $$

CREATE PROCEDURE selectAdvertiseOfACity(IN city_name VARCHAR(30), IN cat_name VARCHAR(20))
BEGIN
    SELECT title
    FROM advertise
    WHERE status = 'accepted'
      AND type = (
          SELECT cat_id
          FROM category
          WHERE name = cat_name
      )
      AND city IN (
          SELECT cityName
          FROM city
          WHERE province = (
              SELECT province
              FROM city
              WHERE cityName = city_name
          )
      );
END$$

DELIMITER ;
__________________________________________________
4.
CREATE PROCEDURE selectAdvertiseWithText(IN search_text VARCHAR(255))
BEGIN
    SET @param = CONCAT('%', search_text, '%');
    
    SELECT a.*, u.first_name, u.last_name
    FROM advertise a
    INNER JOIN user u ON a.publisher_id = u.user_id
    WHERE a.title LIKE @param 
       OR a.description LIKE @param 
       OR u.first_name LIKE @param 
       OR u.last_name LIKE @param;
END$$

DELIMITER ;

_________________________________________________
5.a

--this also returns the given number's user's data
DELIMITER $$

CREATE PROCEDURE selectCityMate(IN phone_email VARCHAR(50))
BEGIN
    DECLARE user_city VARCHAR(30);

    -- Determine the city of the user based on phone number or email
    SELECT city INTO user_city
    FROM user
    WHERE phone_number = phone_email OR email = phone_email;

    -- Select users from the same city
    SELECT *
    FROM user
    WHERE type = 1 AND city = user_city;
END$$

DELIMITER ;
_______________________________
5.b
--this doesnt show the user him/her self.

DELIMITER $$

CREATE PROCEDURE selectCityMate(IN phone_email VARCHAR(50))
BEGIN
    DECLARE user_city VARCHAR(30);
    DECLARE user_id_found INT;

    -- Determine the city and user_id of the user based on phone number or email
    SELECT city, user_id INTO user_city, user_id_found
    FROM user
    WHERE phone_number = phone_email OR email = phone_email;

    -- Select users from the same city excluding the user himself
    SELECT *
    FROM user
    WHERE type = 1 AND city = user_city AND user_id != user_id_found;
END$$

DELIMITER ;

________________________________________

6.

DELIMITER $$

CREATE PROCEDURE selectMostAdvertise(
    IN n INT,
    IN start_date DATE
)
BEGIN
    SELECT u.*
    FROM (
        SELECT publisher_id
        FROM advertise
        WHERE published_at > start_date
        GROUP BY publisher_id
        ORDER BY COUNT(*) DESC
        LIMIT n
    ) AS top_publishers
    JOIN user u ON top_publishers.publisher_id = u.user_id;
END$$

DELIMITER ;


__________________________________________
7.a
--if the categoryname is id itself
DELIMITER $$

CREATE PROCEDURE selectRejectedAdvertise(IN category_name VARCHAR(10))
BEGIN
    SELECT *
    FROM advertise
    WHERE status = 'rejected' AND type = category_name
    ORDER BY published_at;
END$$

DELIMITER ;

_______________
7.b

DELIMITER $$

CREATE PROCEDURE selectRejectedAdvertise(IN category_name VARCHAR(10))
BEGIN
    DECLARE category_id INT;

    -- Find the category ID based on the provided category name
    SELECT cat_id INTO category_id FROM category WHERE name = category_name;

    -- Select rejected advertisements for the found category ID
    SELECT *
    FROM advertise
    WHERE status = 'rejected' AND category_id = type
    ORDER BY published_at;
END$$

DELIMITER ;
______________________________________________
8.a
--if the report-type is the id itself
DELIMITER $$

CREATE PROCEDURE selectMostReporter(IN report_type VARCHAR(10))
BEGIN
    SELECT writer_id, COUNT(*) AS report_count
    FROM report
    WHERE type = report_type
    GROUP BY writer_id
    ORDER BY report_count DESC
    LIMIT 1;
END$$

DELIMITER ;

______________
8.b
--returns the user's reports count about that certain category or subject
DELIMITER $$

CREATE PROCEDURE selectMostReporter(IN report_type VARCHAR(20))
BEGIN
    SELECT writer_id, COUNT(*) AS report_count
    FROM report
    WHERE type = (
		SELECT cat_id
        FROM report_category
        WHERE name = report_type
    )
    GROUP BY writer_id
    ORDER BY report_count DESC
    LIMIT 1;
END$$

DELIMITER ;
_____________________________

8.c
--returns all users report counts for all report category

DELIMITER $$

CREATE PROCEDURE selectMostReporter(IN report_type VARCHAR(20))
BEGIN
    SELECT writer_id, COUNT(*) AS total_reports
    FROM report
    WHERE writer_id IN (
        SELECT writer_id
        FROM report
        WHERE type = (
            SELECT cat_id
            FROM report_category
            WHERE name = report_type
        )
    )
    GROUP BY writer_id
    ORDER BY total_reports DESC
    LIMIT 1;
END$$

DELIMITER ;

